#usda 1.0
(
    defaultPrim = "Wall2"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Wall2" (
    assetInfo = {
        asset identifier = @./Wall2.usda@
        string name = "Wall2"
    }
    customData = {
        string Category = "Wall"
        string UUID = "99BE7521-492F-49B2-BB09-16B25B710D90"
    }
    kind = "component"
)
{
    def Mesh "Wall2"
    {
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13, 14, 12, 14, 15, 31, 30, 28, 30, 29, 28, 27, 26, 24, 26, 25, 24, 23, 22, 20, 22, 21, 20, 19, 18, 16, 18, 17, 16, 32, 33, 34, 32, 34, 35, 36, 37, 38, 36, 38, 39, 40, 41, 42, 40, 42, 43, 44, 45, 46, 44, 46, 47, 48, 49, 50, 48, 50, 51, 52, 53, 54, 52, 54, 55, 56, 57, 58, 56, 58, 59, 60, 61, 62, 60, 62, 63, 64, 65, 66, 66, 67, 64, 68, 70, 69, 71, 70, 68, 72, 74, 73, 75, 74, 72, 76, 78, 77, 79, 78, 76, 80, 82, 81, 83, 82, 80, 84, 86, 85, 87, 86, 84]
        rel material:binding = </Wall2/Wall2_color>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1.0000001, 0, 3.2110414e-8), (-1.0000001, 0, 3.2110414e-8), (-1.0000001, 0, 3.2110414e-8), (-1.0000001, 0, 3.2110414e-8), (-7.2880354e-8, 0, -1.0000001), (-7.2880354e-8, 0, -1.0000001), (-7.2880354e-8, 0, -1.0000001), (-7.2880354e-8, 0, -1.0000001), (0.99998426, 0, 0.0056030625), (0.99998426, 0, 0.0056030625), (0.99998426, 0, 0.0056030625), (0.99998426, 0, 0.0056030625), (-0.0056030327, 0, 0.9999842), (-0.0056030327, 0, 0.9999842), (-0.0056030327, 0, 0.9999842), (-0.0056030327, 0, 0.9999842)]
        point3f[] points = [(-1.5058573, -1.2270818, 0), (-0.833599, -1.2270818, 0), (-0.833599, 1.2270818, 0), (-1.5058573, 1.2270818, 0), (-0.833599, -1.2270818, 0), (1.0823351, -1.2270818, 0), (1.0823351, -0.60984945, 0), (-0.833599, -0.60984945, 0), (-0.833599, 0.9924395, 0), (1.0823351, 0.9924395, 0), (1.0823351, 1.2270818, 0), (-0.833599, 1.2270818, 0), (1.0823351, -1.2270818, 0), (1.5058573, -1.2270818, 0), (1.5058573, 1.2270818, 0), (1.0823351, 1.2270818, 0), (-1.5058573, -1.2270818, -0.16), (-0.833599, -1.2270818, -0.16), (-0.833599, 1.2270818, -0.16), (-1.5058573, 1.2270818, -0.16), (-0.833599, -1.2270818, -0.16), (1.0823351, -1.2270818, -0.16), (1.0823351, -0.60984945, -0.16), (-0.833599, -0.60984945, -0.16), (-0.833599, 0.9924395, -0.16), (1.0823351, 0.9924395, -0.16), (1.0823351, 1.2270818, -0.16), (-0.833599, 1.2270818, -0.16), (1.0823351, -1.2270818, -0.16), (1.5058573, -1.2270818, -0.16), (1.5058573, 1.2270818, -0.16), (1.0823351, 1.2270818, -0.16), (-0.83359903, -0.6098494, 0), (1.0823351, -0.6098494, 0), (1.0823351, -0.6098494, -0.16), (-0.83359903, -0.6098494, -0.16), (1.0823351, -0.6098494, 0), (1.0823351, 0.9924395, 0), (1.0823351, 0.9924395, -0.16), (1.0823351, -0.6098494, -0.16), (1.0823351, 0.9924395, 0), (-0.83359903, 0.9924395, 0), (-0.83359903, 0.9924395, -0.16), (1.0823351, 0.9924395, -0.16), (-0.83359903, 0.9924395, 0), (-0.83359903, -0.6098494, 0), (-0.83359903, -0.6098494, -0.16), (-0.83359903, 0.9924395, -0.16), (-1.5058573, 1.2270818, 0), (1.5058573, 1.2270818, 0), (1.5058573, 1.2270818, -0.16), (-1.5058573, 1.2270818, -0.16), (1.5058573, -1.2270818, 0), (-1.5058573, -1.2270818, 0), (-1.5058573, -1.2270818, -0.16), (1.5058573, -1.2270818, -0.16), (1.5058573, 1.2270818, 0), (1.5058573, -1.2270818, 0), (1.5058573, -1.2270818, -0.16), (1.5058573, 1.2270818, -0.16), (-1.5058573, -1.2270818, 0), (-1.5058573, 1.2270818, 0), (-1.5058573, 1.2270818, -0.16), (-1.5058573, -1.2270818, -0.16), (1.5058573, -1.2270818, 0), (1.5058573, -1.2270818, -0.16000001), (1.6667563, -1.2270818, -0.16000001), (1.6658548, -1.2270818, 0.00089648995), (1.5058573, 1.2270818, 0), (1.5058573, 1.2270818, -0.16000001), (1.6667563, 1.2270818, -0.16000001), (1.6658548, 1.2270818, 0.00089648995), (1.5058573, -1.2270818, 0), (1.5058573, -1.2270818, -0.16000001), (1.5058573, 1.2270818, -0.16000001), (1.5058573, 1.2270818, 0), (1.5058573, -1.2270818, -0.16000001), (1.6667563, -1.2270818, -0.16000001), (1.6667563, 1.2270818, -0.16000001), (1.5058573, 1.2270818, -0.16000001), (1.6667563, -1.2270818, -0.16000001), (1.6658548, -1.2270818, 0.00089648995), (1.6658548, 1.2270818, 0.00089648995), (1.6667563, 1.2270818, -0.16000001), (1.6658548, -1.2270818, 0.00089648995), (1.5058573, -1.2270818, 0), (1.5058573, 1.2270818, 0), (1.6658548, 1.2270818, 0.00089648995)]
        uniform token subdivisionScheme = "none"
        matrix4d xformOp:transform = ( (0.9503890872001648, 0, 0.311063677072525, 0), (0, 1, 0, 0), (-0.3110637068748474, 0, 0.9503890872001648, 0), (1.1152546405792236, 0.18864037096500397, -2.3302600383758545, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Material "Wall2_color"
    {
        token outputs:surface.connect = </Wall2/Wall2_color/surfaceShader.outputs:surface>

        def Shader "surfaceShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (1, 1, 1)
            color3f inputs:emissiveColor = (0, 0, 0)
            normal3f inputs:normal = (1, 1, 1)
            float inputs:occlusion = 1
            float inputs:opacity = 1
            token outputs:surface
        }
    }
}

