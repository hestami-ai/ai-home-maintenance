#usda 1.0
(
    defaultPrim = "Chair1"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Chair1" (
    assetInfo = {
        asset identifier = @./Chair1.usda@
        string name = "Chair1"
    }
    customData = {
        string Category = "Chair"
        string UUID = "3E174404-41DC-4882-A285-36CAA4F19D2C"
    }
    kind = "component"
)
{
    def Mesh "Chair1"
    {
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13, 14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23]
        rel material:binding = </Chair1/Chair1_color>
        normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)]
        point3f[] points = [(-0.21935634, -0.4596752, -0.268553), (-0.21935634, 0.11480737, -0.268553), (0.21935634, 0.11480737, -0.268553), (0.21935634, -0.4596752, -0.268553), (-0.21935634, -0.4596752, 0.268553), (0.21935634, -0.4596752, 0.268553), (0.21935634, 0.11480737, 0.268553), (-0.21935634, 0.11480737, 0.268553), (-0.21935634, -0.4596752, 0.268553), (-0.21935634, -0.4596752, -0.268553), (0.21935634, -0.4596752, -0.268553), (0.21935634, -0.4596752, 0.268553), (0.21935634, 0.11480737, 0.268553), (0.21935634, 0.11480737, -0.268553), (-0.21935634, 0.11480737, -0.268553), (-0.21935634, 0.11480737, 0.268553), (-0.21935634, 0.11480737, 0.268553), (-0.21935634, 0.11480737, -0.268553), (-0.21935634, -0.4596752, -0.268553), (-0.21935634, -0.4596752, 0.268553), (0.21935634, -0.4596752, 0.268553), (0.21935634, -0.4596752, -0.268553), (0.21935634, 0.11480737, -0.268553), (0.21935634, 0.11480737, 0.268553)]
        uniform token subdivisionScheme = "none"
        matrix4d xformOp:transform = ( (-0.8607470393180847, 0, -0.5090330243110657, 0), (0, 1, 0, 0), (0.5090330243110657, 0, -0.8607470393180847, 0), (-0.04097180813550949, -0.5787662267684937, 0.4111821949481964, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Material "Chair1_color"
    {
        token outputs:surface.connect = </Chair1/Chair1_color/surfaceShader.outputs:surface>

        def Shader "surfaceShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (1, 1, 1)
            color3f inputs:emissiveColor = (0, 0, 0)
            normal3f inputs:normal = (1, 1, 1)
            float inputs:occlusion = 1
            float inputs:opacity = 1
            token outputs:surface
        }
    }
}

