/* tslint:disable */
/* eslint-disable */
/**
 * Hestami AI API
 * API documentation for Hestami AI
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserRoleEnum } from './UserRoleEnum';
import {
    UserRoleEnumFromJSON,
    UserRoleEnumFromJSONTyped,
    UserRoleEnumToJSON,
    UserRoleEnumToJSONTyped,
} from './UserRoleEnum';

/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * 
     * @type {string}
     * @memberof User
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    password: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    confirmPassword: string;
    /**
     * 
     * @type {UserRoleEnum}
     * @memberof User
     */
    userRole: UserRoleEnum;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    firstName: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    lastName: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    phoneNumber?: string | null;
}



/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): value is User {
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('password' in value) || value['password'] === undefined) return false;
    if (!('confirmPassword' in value) || value['confirmPassword'] === undefined) return false;
    if (!('userRole' in value) || value['userRole'] === undefined) return false;
    if (!('firstName' in value) || value['firstName'] === undefined) return false;
    if (!('lastName' in value) || value['lastName'] === undefined) return false;
    return true;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if (json == null) {
        return json;
    }
    return {
        
        'email': json['email'],
        'password': json['password'],
        'confirmPassword': json['confirm_password'],
        'userRole': UserRoleEnumFromJSON(json['user_role']),
        'firstName': json['first_name'],
        'lastName': json['last_name'],
        'phoneNumber': json['phone_number'] == null ? undefined : json['phone_number'],
    };
}

export function UserToJSON(json: any): User {
    return UserToJSONTyped(json, false);
}

export function UserToJSONTyped(value?: User | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'email': value['email'],
        'password': value['password'],
        'confirm_password': value['confirmPassword'],
        'user_role': UserRoleEnumToJSON(value['userRole']),
        'first_name': value['firstName'],
        'last_name': value['lastName'],
        'phone_number': value['phoneNumber'],
    };
}

