Recommendations to Improve Prompt Clarity for Qwen 2.5
Your current prompt is quite detailed and structured well, but there are several ways to improve clarity, specificity, and LLM parsing efficiency. Below are my recommendations:

1️⃣ Explicitly Separate and Format Instructions Clearly
Currently, the instructions are mixed in a large block of text. You should separate concerns more clearly to improve comprehension.

✅ Example Improvement
Break down sections clearly (INSTRUCTIONS, SCHEMA, HTML CONTENT, OUTPUT FORMAT, etc.).
Use explicit bullet points and --- dividers.
2️⃣ Define an Explicit Extraction Strategy
Right now, you're implying that the model should "extract" information, but you haven't explicitly defined how it should handle missing, ambiguous, or derived data.

✅ Example Improvement
Add explicit handling rules for missing values and ambiguous extractions:

text
Copy
Edit
INSTRUCTIONS:

- Extract structured data **strictly following** the provided JSON schema.
- If a value is missing, use `null` instead of an empty string.
- Convert numerical values explicitly where needed (e.g., "5 years" → 5).
- Identify potential synonyms for key categories (e.g., "recognition" → award).
- Extract text from attributes (`data-star`, `aria-label`) where applicable.
- Ignore redundant or duplicate information in reviews and business details.
- Preserve **only relevant** details and avoid repeated phrases.
3️⃣ Improve the JSON Schema Presentation
The schema is currently a massive block of JSON, which might be overwhelming for token parsing. Instead:

Provide a high-level overview first before including the full schema.
Use a compact example output before the full schema.
✅ Example High-Level Overview
text
Copy
Edit
EXPECTED OUTPUT STRUCTURE:

- `business_info`: Name, description, years in business, employees, service areas, business hours, contact details, social media, licenses, background check.
- `services`: Offered, specialties, not offered.
- `reviews`: Ratings, total reviews, distribution, keywords, and individual reviews.
- `customer_interaction`: Onboarding, pricing, communication style.
- `media`: Photos, gallery links.

The complete schema is below:
(Then, you can include the full JSON schema separately.)

4️⃣ Improve Output Formatting Rules
Currently, you specify "Provide your response as valid JSON only.", but you could reinforce rules by explicitly mentioning how to structure the JSON output.

✅ Example Improvement
text
Copy
Edit
OUTPUT FORMAT REQUIREMENTS:

- The output **must be a valid JSON object** strictly following the provided schema.
- **Do not include** comments, explanations, or redundant phrases.
- **Avoid trailing commas** in JSON arrays or objects.
- Ensure that all string values are **trimmed and free of extra whitespace**.
- Use `null` where data is unavailable.
- **Do not infer information** beyond what is explicitly stated in the HTML.
- **Use consistent casing and formatting** for extracted text.
5️⃣ Clarify Handling of HTML-Specific Elements
Your current prompt mentions HTML elements but does not explicitly guide the LLM on how to extract key details from different HTML structures.

✅ Example Improvement
text
Copy
Edit
HTML PROCESSING RULES:

- Extract business details **only from structured content** (ignore decorative text).
- Extract ratings from `data-star` and `aria-label` attributes.
- Extract review text from `<div id="review-text-XXXXX">...</div>`.
- Extract business hours from any `<table>` or `<ul>` elements.
- Extract links from `<a href="...">...</a>` elements.
- Ignore `<script>`, `<style>`, `<noscript>`, and unnecessary HTML wrappers.
6️⃣ Optimize JSON Parsing for Stability
Your prompt currently says:

text
Copy
Edit
CRITICALLY IMPORTANT: Generate ONLY valid strict JSON without any comments, explanations, or expressions.
Instead of just telling the model what not to do, ensure it understands what valid JSON looks like by providing an expected JSON example.

✅ Example Expected JSON Output
json
Copy
Edit
{
  "business_info": {
    "name": "JNB Specialty Contracting",
    "description": "Roofing services specializing in insurance claims and high-quality workmanship.",
    "years_in_business": 5,
    "employees": 10,
    "service_areas": ["Virginia", "Maryland", "Washington D.C."],
    "business_hours": {
      "Monday": "8 AM - 6 PM",
      "Tuesday": "8 AM - 6 PM",
      "Sunday": "Closed"
    },
    "contact_information": {
      "website": "https://www.example.com",
      "phone": "(123) 456-7890",
      "address": "123 Main Street, Springfield, VA"
    },
    "social_media": ["facebook.com/example", "instagram.com/example"],
    "license": {
      "type": "HIC – Contractor – Home Improvement",
      "number": "2705189619",
      "holder": "Bryan Hernandez",
      "verified_on": "2024-02-01",
      "valid_until": "2026-01-31"
    },
    "background_check": true,
    "awards": [
      {
        "name": "Top Roofer Award",
        "year": 2023,
        "description": "Awarded by XYZ organization."
      }
    ]
  },
  "reviews": {
    "overall_rating": 5.0,
    "total_reviews": 25,
    "rating_distribution": {
      "5_star": 80,
      "4_star": 10,
      "3_star": 5,
      "2_star": 3,
      "1_star": 2
    },
    "review_keywords": ["fast service", "great communication", "insurance assistance"],
    "individual_reviews": [
      {
        "reviewer": "David Q.",
        "rating": 5,
        "date": "2024-04-15",
        "platform": "Thumbtack",
        "review_text": "Bryan did a great job handling my insurance claim and repairing my roof. Highly recommend!",
        "service_performed": "Roof Repair",
        "details": {
          "building_type": "Two-story",
          "insurance_covered": false
        }
      }
    ]
  }
}
7️⃣ Reduce Prompt Length for Token Efficiency
Move the JSON schema to a separate reference (e.g., store it externally and fetch dynamically).
Remove redundant instructions by grouping them into categories.
Final Recommended Prompt Structure
Introduction
"You are an AI that extracts structured data from HTML content according to a predefined schema."
Instructions (bullet points)
"Follow the provided JSON schema. If a value is missing, use null."
Schema Overview
"The expected fields include business details, services, reviews, and customer interactions."
HTML Parsing Rules
"Extract ratings from data-star attributes, ignore decorative text, and extract links where applicable."
Output Format Requirements
"Generate valid JSON only. No comments, explanations, or formatting errors."
Expected JSON Example
"Here is a correctly formatted JSON output:" (followed by a trimmed example)
Summary of Key Improvements
✅ Make instructions clear & concise using bullet points.
✅ Break down concerns into sections for easier LLM parsing.
✅ Define extraction logic explicitly for missing/ambiguous data.
✅ Optimize JSON schema presentation (overview + full schema).
✅ Provide an example JSON output to enforce formatting.
✅ Reduce prompt length by externalizing the full schema when possible.

===============

**INSTRUCTIONS FOR EXTRACTION**

You are an AI assistant tasked with extracting structured data from HTML content according to a predefined schema.

Follow the extraction guidelines below to ensure a clean, valid JSON output:

### **Extraction Rules:**
- **Strictly adhere to the provided JSON schema** (see schema section).
- **Use `null` for missing values** instead of empty strings or `undefined`.
- **Remove redundant information** and consolidate repetitive text.
- **Extract key information from attributes**, such as `data-star` for ratings.
- **Identify alternative terms for key fields**, such as:
  - "awards" → may be labeled as "recognition," "honors," "certifications."
  - "business name" → may be under "brand," "company name," "title."
  - "reviews" → may be found within structured HTML tags (`<div id="review-text">`).
- **Extract numbers properly**:
  - Convert "5 years in business" → `5`.
  - Convert "100+ employees" → `100` (omit `+` for simplicity).
- **Preserve only relevant information** while ignoring decorative or promotional content.

---

### **Expected JSON Output Format:**
- **Generate valid JSON only** (strict formatting; no comments or explanations).
- **Ensure correct casing and formatting** for extracted text.
- **No trailing commas** in arrays or objects.

### **Example JSON Output:**
```json
{
  "business_info": {
    "name": "JNB Specialty Contracting",
    "description": "Roofing services specializing in insurance claims and high-quality workmanship.",
    "years_in_business": 5,
    "employees": 10,
    "service_areas": ["Virginia", "Maryland", "Washington D.C."],
    "business_hours": {
      "Monday": "8 AM - 6 PM",
      "Tuesday": "8 AM - 6 PM",
      "Sunday": "Closed"
    },
    "contact_information": {
      "website": "https://www.example.com",
      "phone": "(123) 456-7890",
      "address": "123 Main Street, Springfield, VA"
    },
    "social_media": ["facebook.com/example", "instagram.com/example"],
    "license": {
      "type": "HIC – Contractor – Home Improvement",
      "number": "2705189619",
      "holder": "Bryan Hernandez",
      "verified_on": "2024-02-01",
      "valid_until": "2026-01-31"
    },
    "background_check": true,
    "awards": [
      {
        "name": "Top Roofer Award",
        "year": 2023,
        "description": "Awarded by XYZ organization."
      }
    ]
  },
  "reviews": {
    "overall_rating": 5.0,
    "total_reviews": 25,
    "rating_distribution": {
      "5_star": 80,
      "4_star": 10,
      "3_star": 5,
      "2_star": 3,
      "1_star": 2
    },
    "review_keywords": ["fast service", "great communication", "insurance assistance"],
    "individual_reviews": [
      {
        "reviewer": "David Q.",
        "rating": 5,
        "date": "2024-04-15",
        "platform": "Thumbtack",
        "review_text": "Bryan did a great job handling my insurance claim and repairing my roof. Highly recommend!",
        "service_performed": "Roof Repair",
        "details": {
          "building_type": "Two-story",
          "insurance_covered": false
        }
      }
    ]
  }
}
```

---

### **HTML Content Parsing Guidelines:**
- Extract **ratings** from `data-star` and `aria-label` attributes.
- Extract **review text** from `<div id="review-text-XXXXX">...</div>`.
- Extract **business hours** from `<table>` or `<ul>` elements.
- Extract **contact details and social media** from `<a href="...">...</a>` elements.
- Ignore `<script>`, `<style>`, `<noscript>`, and decorative HTML wrappers.

---

### **Final Output Requirements:**
- **Valid JSON output only** – **NO comments, explanations, or extra text**.
- **No unnecessary words or redundant fields**.
- **Strict adherence to JSON schema structure**.
- **Use `null` for missing values**, instead of empty strings or placeholders.

### **Now, process the following HTML content:**

{HTML CONTENT GOES HERE}

